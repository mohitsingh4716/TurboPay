generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(cuid())
  phone       String      @unique
  password    String?
  name        String
  OnRampTransaction OnRampTransaction[]
  balance     Balance[]
  p2pTransactionFromUser p2pTransfer[] @relation(name: "FromUserRealtion")
  p2pTransactionToUser p2pTransfer[] @relation(name: "ToUserRealtion")
}

model Merchant {
  id          String     @id @default(cuid())
  email       String  @unique
  name        String?
  auth_type   AuthType   
}

model p2pTransfer {
  id         String         @id @default(cuid())
  fromUserId String
  toUserId String
  status OnRampStatus
  amount Int
  fromUser User @relation(name: "FromUserRealtion", fields: [fromUserId], references: [id])
  toUser User @relation(name: "ToUserRealtion", fields: [toUserId], references: [id])
  createdAt DateTime @default(now())
  direction String?
}


model OnRampTransaction{
  id String @id @default(cuid())
  status OnRampStatus
  token String @unique
  provider String
  amount Int
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Balance {
  id String @id @default(cuid())
  amount Int
  userId String @unique
  locked Int
  user User @relation(fields: [userId], references: [id])
}

model Bank {
  id String @id @default(cuid())
  name String
  accountNumber String @unique
  balance Int
  userId String
  password String
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
 Success
 Failure
 Processing
}